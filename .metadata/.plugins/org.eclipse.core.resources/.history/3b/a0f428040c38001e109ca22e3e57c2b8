package example;

import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public class search extends HttpServlet {
	private static final long serialVersionUID = 1L;

    public search() {
        super();
    }
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
		// java, servlet, spring 모두 한글 형태가 출력이 안됨(WEB)
		request.setCharacterEncoding("UTF-8");
		response.setContentType("text/html; charset=utf-8");
		
		String usernm = request.getParameter("usernm").intern();
		String userem = request.getParameter("useremail").intern();
		/*
		 * 응용문제5.
		 * 아이디 찾기 기능을 완성해야 합니다. 배열 데이터값을 확인하여 이름과 이메일이 동일한 정보
		 * 일 경우 결과값을 출력하며, 만약 이름과 이메일 정보 중 틀릴 경우 error 라는 메세지를 콘솔로
		 * 출력합니다.
		 * */
		String members[][] = {
				{"장진호","배유미","염무원","김승균","김경민","장진호","김경민"},
				{"jang_ho@nate.com","bae_mi@nate.com","number1@gmail.com","kim@ante.com",
					"min@nate.com","ho@naver.com","k_min@gmail.com"},
				{"jang_ho","bae_mi","number1","kim","min","ho","k_min"}
		};
		//	members.length : 3
		// members[0].length(); : 5
		for(int i=0; i < members[0].length; i++) {
			if(usernm == members[0][i] && userem == members[1][i]) {
				System.out.println("user ID : " + members[0][i] + ", userEmail : "+ members[1][i]);
			}else {
				System.out.println("해당 정보가 없습니다.");
			}			
		}
		
		
//		System.out.println("usernm");
//		System.out.println("userem");
	}
}
